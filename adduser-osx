#!/bin/bash
#TODO: Add support for addition of all varieties of groups
usage="Purpose: Create a new user on OSX. Unfortunately there is no builtin script to do so on OSX, like 'adduser' for Linux/Unix
Usage: 
	adduser <username>
	adduser 
		-u <optional_UserName>
		-r <optional_RealName>
		-i <optional_UserID>
		-g <optional_GroupID>

To delete the user: sudo dscl . -delete /Users/<user>
	And: sudo dscl . -delete /Groups/admin GroupMembership <user>
	You'll also have to delete the user's home directory

Author: George Asante, https://github.com/GeorgeKA"

user='null'
realName='null'
userID='null'
groupID='null'

while getopts ":u:r:i:g:h" opt
do
	case $opt in
		u)
			user="$OPTARG"
			;;
		r)
			realName="$OPTARG"
			;;
		i)
			userID="$OPTARG"
			;;
		g)
			groupID="$OPTARG"
			;;
		h)
			printf "$usage"
			exit 1
			;;
		\?)
			printf "Invalid argument $OPTARG"
			exit 1
			;;
		:)
			printf "Missing an argument"
			exit 1
			;;
	esac
done

if [[ $UID -ne 0 ]]
then 
	printf "Please run $0 as root.\n" 
	exit 1 
fi

if [ "$user" != 'null' ] # If the user argument was used
then
	: #Do nothing
elif [ "$1" != '' ] # If an argument was parsed
then
	user=$1
else
	#printf "Try again\nUsage: adduser <userName>\n--------------\n"
	printf "$usage"
	exit 1
fi

printf "\nWelcome to adduser!!! A simple script to add new users on OSX systems\n--------------\n"

if [ "$realName" == 'null' ]
then
	echo "Enter the user's full name"
	read realName
	echo ""
fi

if [ "$userID" == 'null' ]
then
	echo "Enter the user ID"
	echo "(To display all users and IDs try this in another terminal: dscl . -list /users UniqueID)"
	read userID
	echo ""
fi

if [ "$groupID" == 'null' ]
then
	echo "Enter the group ID"
	echo "(To display all groups and IDs try this in another terminal: dscl . -list /groups PrimaryGroupID)"
	# group ID conventions: http://serverfault.com/questions/390640/how-are-group-ids-assigned
	# admin: 80
	# everyone: 12
	# staff: 20
	read groupID
	echo ""
fi

echo "Enter the new password"
read -s passwd
echo ""

echo "Confirm the new password"
read -s passwd2
echo ""

if [ $passwd != $passwd2 ]
then
	printf "Passwords don't match. Exiting...\n--------------\n"
	exit 1
fi

sudo dscl . -create /Users/$user
sudo dscl . -create /Users/$user UserShell /bin/bash
sudo dscl . -create /Users/$user RealName "$realName"
sudo dscl . -create /Users/$user UniqueID "$userID"
sudo dscl . -create /Users/$user PrimaryGroupID $groupID
sudo dscl . -create /Users/$user NFSHomeDirectory /Users/$user
sudo dscl . -passwd /Users/$user $passwd
sudo dscl . -append /Groups/admin GroupMembership $user

if [ "$?" != 0 ]
then
	echo "User creation error. See above"
	exit 1
fi

sudo mkdir /Users/$user
sudo chown $user /Users/$user

# Remove the "#" from the "OptionalDirectories" lines to disable automatic sub-directory creation
#<<OptionalDirectories
Directories[0]='Music'
Directories[1]='Documents'
Directories[2]='Downloads'
Directories[3]='Pictures'
Directories[4]='Videos'
#Directories[5]='Desktop'

for i in "${Directories[@]}"
do
	sudo mkdir /Users/$user/$i
done

touch /Users/$user/.bash_profile

sudo chown -R $user /Users/$user
sudo chgrp -R $groupID /Users/$user
#OptionalDirectories

printf "User '$user' created at /Users/$user\n"
